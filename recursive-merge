#!/usr/bin/env bash

MERGE_OPTIONS=${MERGE_OPTIONS:-"-vvv --no-ask --reset"}
STATUS=${STATUS:-"success-only"}
PUSH_BRANCH=${PUSH_BRANCH:-"merge"}
BASE_BRANCH=${BASE_BRANCH:-"master"}
GIT_HOST=${GIT_HOST:-}


DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
PATH=$DIR:$PATH

set -e
set -u

echo "Merge base repository (no submodule updates)"
scc merge $MERGE_OPTIONS --shallow $BASE_BRANCH

# Update any changed submodules
git submodule sync
git submodule update --remote --recursive

REPO_CONFIG=
echo -n "Merge all submodules"
for yml in scripts/repositories.yml repositories.yml;
do
    if [ -f "${yml}" ]; then
        echo " using repository configuration:"
        cat "${yml}"
        REPO_CONFIG="--repository-config=${yml}"
    fi
done
scc merge $REPO_CONFIG $MERGE_OPTIONS -S $STATUS --update-gitmodules $BASE_BRANCH

echo "Update component versions"
foreach-set-dependencies

echo "Commit all component version changes"
git submodule foreach "git add -u"
git submodule foreach "git commit -m 'Update component versions' || true"
git add -u
git commit -m 'Update component versions' || true

# scc can only push to GitHub
if [ -z "$GIT_HOST" ]; then
    scc push $PUSH_BRANCH
fi
